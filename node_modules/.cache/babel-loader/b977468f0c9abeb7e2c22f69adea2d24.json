{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/projects/memory-game/src/components/board/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../card';\nimport './styles.css';\nco;\nexport default function Board({\n  disabled,\n  dimension,\n  cards,\n  flipped,\n  solved,\n  handleClick\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, cards.map(card => /*#__PURE__*/React.createElement(Card, {\n    key: card.id,\n    id: card.id,\n    type: card.type,\n    width: dimension / 4.5,\n    height: dimension / 4.5,\n    flipped: flipped.includes(card.id),\n    solved: solved.includes(card.id),\n    handleClick: handleClick,\n    disabled: disabled || solved.includes(card.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  })));\n}\nBoard.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  dimension: PropTypes.number.isRequired,\n  cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\n  solved: PropTypes.arrayOf(PropTypes.number).isRequired,\n  handleClick: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/macbookpro/Documents/projects/memory-game/src/components/board/index.js"],"names":["React","PropTypes","Card","co","Board","disabled","dimension","cards","flipped","solved","handleClick","map","card","id","type","includes","propTypes","bool","isRequired","number","arrayOf","shape","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,cAAP;AACAC,EAAE;AAEF,eAAe,SAASC,KAAT,CAAe;AAC3BC,EAAAA,QAD2B;AACjBC,EAAAA,SADiB;AACNC,EAAAA,KADM;AACCC,EAAAA,OADD;AACUC,EAAAA,MADV;AACkBC,EAAAA;AADlB,CAAf,EACgD;AAC3D,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACI,GAAN,CAAWC,IAAD,iBACP,oBAAC,IAAD;AACI,IAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,IAAA,EAAE,EAAED,IAAI,CAACC,EAFb;AAGI,IAAA,IAAI,EAAED,IAAI,CAACE,IAHf;AAII,IAAA,KAAK,EAAER,SAAS,GAAG,GAJvB;AAKI,IAAA,MAAM,EAAEA,SAAS,GAAG,GALxB;AAMI,IAAA,OAAO,EAAEE,OAAO,CAACO,QAAR,CAAiBH,IAAI,CAACC,EAAtB,CANb;AAOI,IAAA,MAAM,EAAEJ,MAAM,CAACM,QAAP,CAAgBH,IAAI,CAACC,EAArB,CAPZ;AAQI,IAAA,WAAW,EAAEH,WARjB;AASI,IAAA,QAAQ,EAAEL,QAAQ,IAAII,MAAM,CAACM,QAAP,CAAgBH,IAAI,CAACC,EAArB,CAT1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ;AAiBH;AAEDT,KAAK,CAACY,SAAN,GAAkB;AACdX,EAAAA,QAAQ,EAAEJ,SAAS,CAACgB,IAAV,CAAeC,UADX;AAEdZ,EAAAA,SAAS,EAAEL,SAAS,CAACkB,MAAV,CAAiBD,UAFd;AAGdX,EAAAA,KAAK,EAAEN,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACoB,KAAV,CAAgB,EAAhB,CAAlB,EAAuCH,UAHhC;AAIdV,EAAAA,OAAO,EAAEP,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACkB,MAA5B,EAAoCD,UAJ/B;AAKdT,EAAAA,MAAM,EAAER,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACkB,MAA5B,EAAoCD,UAL9B;AAMdR,EAAAA,WAAW,EAAET,SAAS,CAACqB,IAAV,CAAeJ;AANd,CAAlB","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from '../card'\nimport './styles.css'\nco\n\nexport default function Board({ \n   disabled, dimension, cards, flipped, solved, handleClick }) {\n    return (\n        <div className='board'>\n            {cards.map((card) => (\n                <Card\n                    key={card.id}\n                    id={card.id}\n                    type={card.type}\n                    width={dimension / 4.5}\n                    height={dimension / 4.5}\n                    flipped={flipped.includes(card.id)}\n                    solved={solved.includes(card.id)}\n                    handleClick={handleClick}\n                    disabled={disabled || solved.includes(card.id)}\n                />\n            ))}\n        </div>\n    )\n}\n\nBoard.propTypes = {\n    disabled: PropTypes.bool.isRequired,\n    dimension: PropTypes.number.isRequired,\n    cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\n    solved: PropTypes.arrayOf(PropTypes.number).isRequired,\n    handleClick: PropTypes.func.isRequired\n}"]},"metadata":{},"sourceType":"module"}